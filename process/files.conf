server {
    listen                  80;
    server_name             _;
    access_log              off;
    lua_code_cache          off;

    set $secret         "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";
    access_by_lua_file  /etc/nginx/conf.d/access_sign.lua;

    error_page 418 = @other;
    error_page 419 = @process;
    location / {
        root /wsc/work/lua/static;
        if ($request_method != GET) {
            return 418; # 非文件下载
        }
        if ($arg_process != "") {
            return 419; # 非文件下载
        }
    }
    location @other {
        if ($request_method != POST) {
            return 405; # 方法不允许
        }
        if ($arg_Action = '') {
            return 404; # action不存在
        }
        set $action "/etc/nginx/conf.d/action_${arg_Action}.lua";
        if (!-e $action) {
            return 406; # action不存在
        }
        root /wsc/work/lua/static;
        content_by_lua_file $action;
    }
    location @process {
        root /wsc/work/lua/static;
        set  $action "/etc/nginx/conf.d/process.lua";
        if ($arg_process ~ ^(\w+)/(.+)) {
            set $process_method $1; # 处理对象类型
            set $process_params $2; # 处理对象参数
            set $action      "/etc/nginx/conf.d/process_${process_method}.lua";
        }
        if (!-e $action) {
            return 406; # action不存在
        }
        content_by_lua_file  $action;
    }

    #add_header Content-Type 'application/json; charset=utf-8';
    #return     405 '{"success": false, "errorCode":"B_REQ_METHOD-NOT-ALLOW", "errorMessage":"请求方法不合法"}';
}